plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.3'
    id 'io.spring.dependency-management' version '1.1.0'
}

ext {
    testcontainersVersion = '1.17.6'
}

group 'com.ericgha'
version '0.0.1-SNAPSHOT'

sourceCompatibility = '19'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework:spring-aspects'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'redis.clients:jedis'
    implementation "com.fasterxml.jackson.core:jackson-databind"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.mockito:mockito-inline"
    testImplementation "org.testcontainers:testcontainers:${testcontainersVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

tasks.register('startRedis', Exec) {
    workingDir './src/main'
    commandLine "docker", "compose", "up", "-d"
}

tasks.register('stopRedis', Exec) {
    workingDir './src/main'
    commandLine "docker", "compose", "down", "-t=5"
}

tasks.withType(JavaCompile) {
    options.compilerArgs += "--enable-preview"
}

tasks.withType(Test) {
    jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec) {
    jvmArgs += '--enable-preview'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}

tasks.bootRun.dependsOn(startRedis)
tasks.bootRun.finalizedBy(stopRedis)

